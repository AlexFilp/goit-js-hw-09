{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1CPJ,EAAAY,OAAOC,KAAK,CACVV,SAAU,gBACVW,MAAO,QACPC,SAAU,OACVC,kBAAmB,SAGRC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAASrB,MAAMsB,OAC3CC,EAAOP,EAAMI,OAAOC,SAASE,KAAKD,MAClCE,EAASR,EAAMI,OAAOC,SAASG,OAAOF,MAC5CG,QAAQC,IAAIR,GACZO,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAEZ,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAC/B7B,EAAc6B,EAAI,EAAGJ,EAAOI,EAAIT,GAC7BU,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBJ,EAAAY,OAAOsB,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAE9DgC,OAAM,SAAAH,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBJ,EAAAY,OAAOyB,QAAQ,sBAAuCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  position: 'center-center',\n  width: '400px',\n  fontSize: '20px',\n  cssAnimationStyle: 'fade',\n});\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(event.target.elements.delay.value);\n  const step = event.target.elements.step.value;\n  const amount = event.target.elements.amount.value;\n  console.log(delay);\n  console.log(step);\n  console.log(amount);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, step * i + delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","init","width","fontSize","cssAnimationStyle","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","console","log","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.7dcb14e5.js.map"}